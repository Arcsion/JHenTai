name: Build & Release Windows

# Trigger on push to any branch or with a tag
on:
  push:
    branches:
      - '**'
    tags:
      - v*

# Cancel previous workflow if new push occurs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: Windows
            os: windows-latest
            artifact_name: release-Windows
            artifact_path: build/windows/*.zip
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    runs-on: ${{ matrix.os }}
    env:
      FLUTTER_VERSION: 3.24.4
    steps:
      # Checkout branch
      - name: Checkout
        uses: actions/checkout@v3
      
      # Add JHenTai api secret
      - name: Setup JHenTai API Secret
        run: |
          echo "api_key_skipped" > lib/src/config/jh_api_secret_config.dart
      
      # Setup Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'master'
          cache: true
      
      # Output Flutter Version
      - name: Output Flutter Version
        run: flutter --version
      
      # Flutter Pub Get
      - name: Flutter Pub Get
        run: |
          git config --global core.longpaths true
          flutter pub get
      
      # Get app version
      - name: Get app version
        id: get_version
        shell: bash
        run: |
          echo "version=$(head -n 5 pubspec.yaml | tail -n 1 | cut -d ' ' -f 2)" >> $GITHUB_OUTPUT
      
      # Build Windows .zip
      - name: Build Windows
        run: |
          flutter build windows -t lib/src/main.dart --release
          $DestDir = "build\windows\JHenTai_${{ steps.get_version.outputs.version }}"
          $SrcDir = "build\windows\x64\runner\Release"
          New-Item -Path $DestDir -ItemType Directory
          Copy-Item $SrcDir\* -Recurse $DestDir
          Copy-Item -Filter *.dll -Path windows\* -Destination $DestDir -Force
          Compress-Archive $DestDir build\windows\JHenTai_${{ steps.get_version.outputs.version }}_Windows.zip
      
      # Upload Artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_path }}
          if-no-files-found: error

  Publish:
    if: startsWith(github.ref, 'refs/tags/')
    name: Publish Windows Release
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Make tmp dir
        run: mkdir /tmp/artifacts
      
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          path: /tmp/artifacts
      
      - name: Upload to release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          allowUpdates: true
          bodyFile: changelog/${{ github.ref_name }}.md
          artifacts: /tmp/artifacts/release-Windows/*.zip
          artifactErrorsFailBuild: true
          replacesArtifacts: true
